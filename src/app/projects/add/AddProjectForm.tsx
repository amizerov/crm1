'use client';

import { useEffect, useState } from 'react';
import { addProject } from '../actions/actions';
import ButtonSave from '@/components/ButtonSave';
import ButtonCancel from '@/components/ButtonCancel';
import FormContainer from '@/components/FormContainer';
import FormFieldStandard from '@/components/FormFieldStandard';
import { StandardInput, StandardSelect, StandardTextarea } from '@/components/StandardInputs';

interface Company {
  id: number;
  companyName: string;
}

interface Template {
  id: number;
  templName: string;
}

interface AddProjectFormProps {
  companies: Company[];
  templates: Template[];
  defaultCompanyId?: number;
}

export default function AddProjectForm({ companies, templates, defaultCompanyId }: AddProjectFormProps) {
  const [selectedCompanyId, setSelectedCompanyId] = useState<number>(defaultCompanyId || 0);

  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é –∏–∑ localStorage –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const savedCompanyId = localStorage.getItem('selectedCompanyId');
    if (savedCompanyId) {
      const companyId = parseInt(savedCompanyId, 10);
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π
      if (companyId === 0 || companies.some(c => c.id === companyId)) {
        setSelectedCompanyId(companyId === 0 ? (defaultCompanyId || 0) : companyId);
      }
    }
  }, [companies, defaultCompanyId]);

  return (
    <FormContainer 
      action={addProject}
      useGrid={true}
      buttons={
        <>
          <ButtonCancel />
          <ButtonSave />
        </>
      }
    >
      {/* –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ */}
      <FormFieldStandard label="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞" required>
        <StandardInput
          type="text"
          id="projectName"
          name="projectName"
          required
          placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
        />
      </FormFieldStandard>

      {/* –ö–æ–º–ø–∞–Ω–∏—è */}
      <FormFieldStandard label="–ö–æ–º–ø–∞–Ω–∏—è" required>
        <StandardSelect
          id="companyId"
          name="companyId"
          required
          value={selectedCompanyId || ''}
          onChange={(e) => setSelectedCompanyId(Number(e.target.value))}
        >
          <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é</option>
          {companies.map((company) => (
            <option key={company.id} value={company.id}>
              {company.companyName}
            </option>
          ))}
        </StandardSelect>
      </FormFieldStandard>

      {/* –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–ª–Ω—É—é —à–∏—Ä–∏–Ω—É */}
      <FormFieldStandard label="–û–ø–∏—Å–∞–Ω–∏–µ" className="col-span-full">
        <StandardTextarea
          id="description"
          name="description"
          rows={4}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
        />
      </FormFieldStandard>

      {/* –®–∞–±–ª–æ–Ω —Å—Ç–∞—Ç—É—Å–æ–≤ –Ω–∞ –ø–æ–ª–Ω—É—é —à–∏—Ä–∏–Ω—É */}
      <FormFieldStandard label="–®–∞–±–ª–æ–Ω —à–∞–≥–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞ (—Å—Ç–∞—Ç—É—Å—ã –∑–∞–¥–∞—á)" required className="col-span-full">
        <StandardSelect
          id="statusSource"
          name="statusSource"
          required
          defaultValue="default"
        >
          <option value="default">üìã –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —à–∞–≥–∏ (–ò–¥–µ—è ‚Üí –ì–æ—Ç–æ–≤–æ –∫ –≤–∑—è—Ç–∏—é ‚Üí –í —Ä–∞–±–æ—Ç–µ ‚Üí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Üí –ì–æ—Ç–æ–≤–æ)</option>
          {templates.map((template) => (
            <option key={template.id} value={template.id}>
              üìù –ò–∑ —à–∞–±–ª–æ–Ω–∞: {template.templName}
            </option>
          ))}
        </StandardSelect>
        <div className="text-sm text-gray-600 dark:text-gray-400 mt-2">
          üí° –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —à–∞–≥–∏ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤. –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –≥–æ—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω —Å—Ç–∞—Ç—É—Å–æ–≤ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤ —Ä–∞–∑–¥–µ–ª–µ "–®–∞–±–ª–æ–Ω—ã".
        </div>
      </FormFieldStandard>
    </FormContainer>
  );
}