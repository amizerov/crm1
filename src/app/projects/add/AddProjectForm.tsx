'use client';

import { useEffect, useState } from 'react';
import { addProject } from '../actions';
import ButtonSave from '@/components/ButtonSave';
import ButtonCancel from '@/components/ButtonCancel';

interface Company {
  id: number;
  companyName: string;
}

interface Template {
  id: number;
  templName: string;
}

interface AddProjectFormProps {
  companies: Company[];
  templates: Template[];
  defaultCompanyId?: number;
}

export default function AddProjectForm({ companies, templates, defaultCompanyId }: AddProjectFormProps) {
  const [selectedCompanyId, setSelectedCompanyId] = useState<number>(defaultCompanyId || 0);

  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é –∏–∑ localStorage –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const savedCompanyId = localStorage.getItem('selectedCompanyId_projects');
    if (savedCompanyId) {
      const companyId = parseInt(savedCompanyId, 10);
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π
      if (companyId === 0 || companies.some(c => c.id === companyId)) {
        setSelectedCompanyId(companyId === 0 ? (defaultCompanyId || 0) : companyId);
      }
    }
  }, [companies, defaultCompanyId]);

  return (
    <form action={addProject} style={{ 
      backgroundColor: '#f8f9fa', 
      padding: 32, 
      borderRadius: 8, 
      border: '1px solid #dee2e6' 
    }}>
      {/* –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –ö–æ–º–ø–∞–Ω–∏—è –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ */}
      <div style={{ display: 'flex', gap: 16, marginBottom: 20 }}>
        <div style={{ flex: 1 }}>
          <label htmlFor="projectName" style={{ 
            display: 'block', 
            marginBottom: 8, 
            fontWeight: 'bold',
            color: '#333'
          }}>
            –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ *
          </label>
          <input
            type="text"
            id="projectName"
            name="projectName"
            required
            style={{
              width: '100%',
              padding: '12px',
              border: '1px solid #ddd',
              borderRadius: 4,
              fontSize: '16px',
              boxSizing: 'border-box'
            }}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
          />
        </div>

        <div style={{ flex: 1 }}>
          <label htmlFor="companyId" style={{ 
            display: 'block', 
            marginBottom: 8, 
            fontWeight: 'bold',
            color: '#333'
          }}>
            –ö–æ–º–ø–∞–Ω–∏—è *
          </label>
          <select
            id="companyId"
            name="companyId"
            required
            value={selectedCompanyId || ''}
            onChange={(e) => setSelectedCompanyId(Number(e.target.value))}
            style={{
              width: '100%',
              padding: '12px',
              border: '1px solid #ddd',
              borderRadius: 4,
              fontSize: '16px',
              boxSizing: 'border-box'
            }}
          >
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é</option>
            {companies.map((company) => (
              <option key={company.id} value={company.id}>
                {company.companyName}
              </option>
            ))}
          </select>
        </div>
      </div>

      <div style={{ marginBottom: 20 }}>
        <label htmlFor="description" style={{ 
          display: 'block', 
          marginBottom: 8, 
          fontWeight: 'bold',
          color: '#333'
        }}>
          –û–ø–∏—Å–∞–Ω–∏–µ
        </label>
        <textarea
          id="description"
          name="description"
          rows={4}
          style={{
            width: '100%',
            padding: '12px',
            border: '1px solid #ddd',
            borderRadius: 4,
            fontSize: '16px',
            boxSizing: 'border-box',
            resize: 'vertical',
            fontFamily: 'inherit'
          }}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
        />
      </div>

      <div style={{ marginBottom: 32 }}>
        <label htmlFor="statusSource" style={{ 
          display: 'block', 
          marginBottom: 8, 
          fontWeight: 'bold',
          color: '#333'
        }}>
          –®–∞–±–ª–æ–Ω —à–∞–≥–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞ (—Å—Ç–∞—Ç—É—Å—ã –∑–∞–¥–∞—á) *
        </label>
        <select
          id="statusSource"
          name="statusSource"
          required
          defaultValue="default"
          style={{
            width: '100%',
            padding: '12px',
            border: '1px solid #ddd',
            borderRadius: 4,
            fontSize: '16px',
            boxSizing: 'border-box', cursor: 'pointer'
          }}
        >
          <option value="default">üìã –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —à–∞–≥–∏ (–ò–¥–µ—è ‚Üí –ì–æ—Ç–æ–≤–æ –∫ –≤–∑—è—Ç–∏—é ‚Üí –í —Ä–∞–±–æ—Ç–µ ‚Üí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Üí –ì–æ—Ç–æ–≤–æ)</option>
          {templates.map((template) => (
            <option key={template.id} value={template.id}>
              üìù –ò–∑ —à–∞–±–ª–æ–Ω–∞: {template.templName}
            </option>
          ))}
        </select>
        <div style={{ 
          fontSize: '14px', 
          color: '#6c757d', 
          marginTop: '8px' 
        }}>
          üí° –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —à–∞–≥–∏ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤. –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –≥–æ—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω —Å—Ç–∞—Ç—É—Å–æ–≤ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤ —Ä–∞–∑–¥–µ–ª–µ "–®–∞–±–ª–æ–Ω—ã".
        </div>
      </div>

      <div style={{ display: 'flex', gap: 16, justifyContent: 'flex-end' }}>
        <ButtonCancel />
        <ButtonSave />
      </div>
    </form>
  );
}