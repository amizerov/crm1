'use client';

import { useRouter } from 'next/navigation';
import { deleteProject } from './actions';
import { useState } from 'react';

interface DelBtnProps {
  projectId: number;
}

export default function DelBtn({ projectId }: DelBtnProps) {
  const router = useRouter();
  const [isDeleting, setIsDeleting] = useState(false);

  const handleDelete = async () => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
      return;
    }

    setIsDeleting(true);

    try {
      const result = await deleteProject(projectId);
      
      if (result.success) {
        router.push('/projects');
        router.refresh();
      } else {
        alert(result.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞');
        setIsDeleting(false);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞');
      setIsDeleting(false);
    }
  };

  return (
    <button
      type="button"
      onClick={handleDelete}
      disabled={isDeleting}
      style={{
        padding: '8px 16px',
        backgroundColor: isDeleting ? '#ccc' : '#dc3545',
        color: 'white',
        border: 'none',
        borderRadius: 4,
        cursor: isDeleting ? 'not-allowed' : 'pointer',
        opacity: isDeleting ? 0.6 : 1
      }}
    >
      {isDeleting ? '–£–¥–∞–ª–µ–Ω–∏–µ...' : 'üóë –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç'}
    </button>
  );
}
