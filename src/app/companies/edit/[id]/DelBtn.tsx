'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { deleteCompany } from './actions';
import DeleteAlert from '@/components/DeleteAlert';


type DeleteButtonProps = {
  companyName: string;
  companyId: number;
};

export default function DeleteButton({ companyName, companyId }: DeleteButtonProps) {
  const router = useRouter();
  const [showModal, setShowModal] = useState(false);
  const [isDeleting, setIsDeleting] = useState(false);

  const handleDelete = async () => {
    setIsDeleting(true);
    try {
        await deleteCompany(companyId);
        router.push('/companies');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏');
        setIsDeleting(false);
        setShowModal(false);
    }
  };

  return (
    <>
      <button 
        type="button"
        className="
          px-6 py-3
          border border-red-300
          rounded-md
          bg-red-50 hover:bg-red-100
          text-red-700 hover:text-red-800
          text-base
          cursor-pointer
          transition-colors duration-200
          focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2
        "
        onClick={() => setShowModal(true)}
      >
        üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é
      </button>

      <DeleteAlert
        show={showModal}
        title="–£–î–ê–õ–ï–ù–ò–ï –ö–û–ú–ü–ê–ù–ò–ò!"
        message="–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é"
        clientName={companyName}
        warnings={[
          '–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –ù–ï–õ–¨–ó–Ø –û–¢–ú–ï–ù–ò–¢–¨',
          '–í—Å–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –±—É–¥—É—Ç –£–î–ê–õ–ï–ù–´ –ù–ê–í–°–ï–ì–î–ê',
          '–°–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ—Ç–µ—Ä—è–Ω—ã',
          '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ'
        ]}
        onCancel={() => setShowModal(false)}
        onConfirm={handleDelete}
        loading={isDeleting}
      />
    </>
  );
}
