'use client';

import { useState, useTransition } from 'react';
import { useRouter } from 'next/navigation';
import FormContainer from '@/components/FormContainer';
import FormFieldStandard from '@/components/FormFieldStandard';
import { StandardInput, StandardSelect } from '@/components/StandardInputs';
import ButtonSave from '@/components/ButtonSave';
import ButtonCancel from '@/components/ButtonCancel';
import { addEmployee } from '../actions/actions';
import { createInvitation, InvitationRole } from '../actions/invitations';

interface User {
  id: number;
  login: string;
  nicName: string;
  fullName: string;
  email: string;
  displayName: string;
}

interface Company {
  id: number;
  companyName: string;
}

interface Props {
  relatedUsers: User[];
  companies: Company[];
}

export default function AddEmployeeForm({ relatedUsers, companies }: Props) {
  const [mode, setMode] = useState<'link' | 'invite'>('link');
  const [isPending, startTransition] = useTransition();
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  const router = useRouter();

  const handleSubmit = async (formData: FormData) => {
    setError(null);
    setSuccess(null);

    try {
      if (mode === 'link') {
        // –°–≤—è–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        startTransition(() => {
          addEmployee(formData);
        });
      } else {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
        const email = formData.get('email') as string;
        const companyId = Number(formData.get('companyId'));
        const role = formData.get('role') as InvitationRole;

        if (!email || !companyId || !role) {
          setError('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
          return;
        }

        const result = await createInvitation({ email, companyId, role });

        if (result.error) {
          setError(result.error);
        } else {
          setSuccess('–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ ' + email);
          setTimeout(() => router.push('/employees'), 2000);
        }
      }
    } catch (err) {
      setError(err instanceof Error ? err.message : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
    }
  };

  return (
    <>
      {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ */}
      <div className="mb-6 flex gap-4 p-1 bg-gray-100 dark:bg-gray-800 rounded-lg">
        <button
          type="button"
          onClick={() => setMode('link')}
          className={`flex-1 py-2 px-4 rounded-md font-medium transition-colors ${
            mode === 'link'
              ? 'bg-white dark:bg-gray-700 text-blue-600 dark:text-blue-400 shadow'
              : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200 cursor-pointer'
          }`}
        >
          üîó –°–≤—è–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ
        </button>
        <button
          type="button"
          onClick={() => setMode('invite')}
          className={`flex-1 py-2 px-4 rounded-md font-medium transition-colors ${
            mode === 'invite'
              ? 'bg-white dark:bg-gray-700 text-blue-600 dark:text-blue-400 shadow'
              : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200 cursor-pointer'
          }`}
        >
          ‚úâÔ∏è –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–æ–≤–æ–≥–æ
        </button>
      </div>

      {/* –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö/—É—Å–ø–µ—Ö–µ */}
      {error && (
        <div className="mb-4 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg text-red-800 dark:text-red-300">
          {error}
        </div>
      )}
      {success && (
        <div className="mb-4 p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg text-green-800 dark:text-green-300">
          {success}
        </div>
      )}

      <FormContainer action={handleSubmit}>
        {mode === 'link' ? (
          /* –†–µ–∂–∏–º: –°–≤—è–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <FormFieldStandard label="–ò–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞" required>
              <StandardInput
                name="Name"
                type="text"
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"
                required
              />
            </FormFieldStandard>

            <FormFieldStandard label="–°–≤—è–∑–∞—Ç—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º">
              <StandardSelect name="userId">
                <option value="">–ù–µ —Å–≤—è–∑—ã–≤–∞—Ç—å</option>
                {relatedUsers.length > 0 ? (
                  relatedUsers.map(user => (
                    <option key={user.id} value={user.id}>
                      {user.displayName} ({user.email})
                    </option>
                  ))
                ) : (
                  <option disabled>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</option>
                )}
              </StandardSelect>
              <p className="mt-1 text-sm text-gray-500 dark:text-gray-400">
                –û—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–æ–ª–ª–µ–≥–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö –≤–∞—à–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π
              </p>
            </FormFieldStandard>

            <FormFieldStandard label="–ö–æ–º–ø–∞–Ω–∏—è" required>
              <StandardSelect name="companyId" required>
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é</option>
                {companies.map(company => (
                  <option key={company.id} value={company.id}>
                    {company.companyName}
                  </option>
                ))}
              </StandardSelect>
            </FormFieldStandard>
          </div>
        ) : (
          /* –†–µ–∂–∏–º: –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ email */
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <FormFieldStandard label="Email –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è" required>
              <StandardInput
                name="email"
                type="email"
                placeholder="email@example.com"
                required
              />
              <p className="mt-1 text-sm text-gray-500 dark:text-gray-400">
                –ù–∞ —ç—Ç–æ—Ç –∞–¥—Ä–µ—Å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
              </p>
            </FormFieldStandard>

            <FormFieldStandard label="–†–æ–ª—å" required>
              <StandardSelect name="role" required>
                <option value="Employee">üë§ –°–æ—Ç—Ä—É–¥–Ω–∏–∫</option>
                <option value="Partner">üëî –ü–∞—Ä—Ç–Ω—ë—Ä</option>
              </StandardSelect>
              <p className="mt-1 text-sm text-gray-500 dark:text-gray-400">
                –ü–∞—Ä—Ç–Ω—ë—Ä –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–≥–∏—Ö
              </p>
            </FormFieldStandard>

            <FormFieldStandard label="–ö–æ–º–ø–∞–Ω–∏—è" required>
              <StandardSelect name="companyId" required>
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–∞–Ω–∏—é</option>
                {companies.map(company => (
                  <option key={company.id} value={company.id}>
                    {company.companyName}
                  </option>
                ))}
              </StandardSelect>
            </FormFieldStandard>
          </div>
        )}

        <div className="pt-6 flex justify-end gap-3">
          <ButtonCancel href="/employees" />
          <ButtonSave disabled={isPending}>
            {mode === 'link' ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ'}
          </ButtonSave>
        </div>
      </FormContainer>
    </>
  );
}
