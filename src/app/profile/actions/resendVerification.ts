'use server';

import { query } from '@/db/connect';
import { sendVerificationEmail } from '@/lib/email';
import crypto from 'crypto';

/**
 * –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email
 */
export async function resendVerificationEmail(userId: number, email: string) {
  try {
    console.log('üìß Resending verification email for userId:', userId, 'email:', email);

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –ª–∏ —É–∂–µ email
    const userResult = await query(
      `SELECT isVerified FROM [Users] WHERE id = @userId`,
      { userId }
    );

    if (!userResult || userResult.length === 0) {
      return { error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' };
    }

    if (userResult[0].isVerified) {
      return { error: 'Email —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω' };
    }

    // 2. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–æ–∫–µ–Ω—ã –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await query(
      `DELETE FROM VerificationToken WHERE userId = @userId`,
      { userId }
    );

    // 3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
    const token = crypto.randomBytes(32).toString('hex');
    const expiresAt = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 —á–∞—Å–∞

    console.log('üîë Creating new token:', { 
      userId, 
      tokenPreview: token.substring(0, 10) + '...', 
      expiresAt: expiresAt.toISOString() 
    });

    // 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
    await query(
      `INSERT INTO VerificationToken (userId, token, expiresAt, createdAt)
       VALUES (@userId, @token, @expiresAt, GETDATE())`,
      { userId, token, expiresAt: expiresAt.toISOString() }
    );

    // 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email
    const emailResult = await sendVerificationEmail(email, token);

    if (emailResult.error) {
      console.error('‚ö†Ô∏è Failed to send verification email');
      return { error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' };
    }

    console.log('‚úÖ Verification email resent successfully');
    return { 
      success: true, 
      message: '–ü–∏—Å—å–º–æ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É.' 
    };

  } catch (error) {
    console.error('‚ùå Error resending verification email:', error);
    return { error: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' };
  }
}
