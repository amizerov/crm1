'use server';

import { revalidatePath } from 'next/cache';
import { getConnection, sql } from '@/db/connect';

interface UpdateTaskDatesResult {
  success: boolean;
  error?: string;
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ drag & drop –Ω–∞ –¥–∏–∞–≥—Ä–∞–º–º–µ –ì–∞–Ω—Ç–∞
 * 
 * @param taskId - ID –∑–∞–¥–∞—á–∏
 * @param startDate - –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO (YYYY-MM-DD)
 * @param dedline - –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO (YYYY-MM-DD)
 */
export async function updateTaskDates(
  taskId: number,
  startDate: string,
  dedline: string
): Promise<UpdateTaskDatesResult> {
  try {
    console.log('üìÖ updateTaskDates:', { taskId, startDate, dedline });

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç
    const start = new Date(startDate);
    const end = new Date(dedline);

    if (isNaN(start.getTime()) || isNaN(end.getTime())) {
      return {
        success: false,
        error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã',
      };
    }

    if (end < start) {
      return {
        success: false,
        error: '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞',
      };
    }

    const poolConnection = await getConnection();
    
    const result = await poolConnection.request()
      .input('taskId', sql.Int, taskId)
      .input('startDate', sql.Date, startDate)
      .input('dedline', sql.Date, dedline)
      .query(`
        UPDATE Task 
        SET 
          startDate = @startDate, 
          dedline = @dedline,
          dtu = GETDATE()
        WHERE id = @taskId
      `);

    console.log('‚úÖ Task dates updated:', result.rowsAffected);

    // –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∫–µ—à —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–¥–∞—á
    revalidatePath('/tasks/views');
    
    return { success: true };
    
  } catch (error) {
    console.error('‚ùå Error updating task dates:', error);
    return {
      success: false,
      error: error instanceof Error ? error.message : String(error),
    };
  }
}
