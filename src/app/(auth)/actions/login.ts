'use server';

import { query } from '@/db/connect';
import { cookies } from 'next/headers';
import bcrypt from 'bcrypt';

/**
 * –•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è —Å –ø–æ–º–æ—â—å—é bcrypt
 */
export async function hashPassword(password: string): Promise<string> {
  const saltRounds = 10;
  return bcrypt.hash(password, saltRounds);
}

/**
 * Server Action –¥–ª—è –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–µ–≥–∞—Å–∏-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞—Ä–æ–ª–µ–º "123" –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ
 * –∏ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–æ–ª—è–º–∏
 */
export async function loginAction(formData: FormData) {
  const login = formData.get('login') as string;
  const password = formData.get('password') as string;
  const returnTo = formData.get('returnTo') as string;

  if (!login || !password) {
    return { 
      success: false, 
      error: '–õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' 
    };
  }

  try {
    console.log('üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', login);
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    const userResult = await query(`
      SELECT id, login, nicName, password, isVerified 
      FROM [User] 
      WHERE login = @login
    `, { login });
    
    if (userResult.length === 0) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return { 
        success: false, 
        error: '–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å' 
      };
    }

    const user = userResult[0];
    const storedPassword = user.password;
    const isVerified = user.isVerified;
    
    console.log('üîç –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
      id: user.id,
      login: user.login,
      hashedPassword: storedPassword?.startsWith('$2b$') || storedPassword?.startsWith('$2a$'),
      isVerified: isVerified
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
    let isPasswordValid = false;

    // –°–ª—É—á–∞–π 1: –•–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å (–Ω–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —á–µ—Ä–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é)
    if (storedPassword && (storedPassword.startsWith('$2b$') || storedPassword.startsWith('$2a$'))) {
      console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è');
      isPasswordValid = await bcrypt.compare(password, storedPassword);
      
      // –î–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê –ø—Ä–æ–≤–µ—Ä–∫–∞ email
      if (isPasswordValid) {
        if (isVerified === 0 || isVerified === false || isVerified === null || isVerified === undefined) {
          console.log('‚ùå Email –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ.');
          return { 
            success: false, 
            error: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É.',
            needsVerification: true 
          };
        }
        console.log('‚úÖ Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω, –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω');
      }
    } 
    // –°–ª—É—á–∞–π 2: –õ–µ–≥–∞—Å–∏-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ø–∞—Ä–æ–ª–µ–º "123" –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ
    else if (storedPassword === '123' && password === '123') {
      console.log('‚ö†Ô∏è –õ–µ–≥–∞—Å–∏-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ø–∞—Ä–æ–ª–µ–º "123" (–±–µ–∑ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è)');
      isPasswordValid = true;
      // –î–ª—è –ª–µ–≥–∞—Å–∏-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∞ email –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞
    }
    // –°–ª—É—á–∞–π 3: –î—Ä—É–≥–∏–µ —Å—Ç–∞—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø–∞—Ä–æ–ª—è–º–∏ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ
    else {
      console.log('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ (—Å—Ç–∞—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)');
      isPasswordValid = password === storedPassword;
      
      // –î–ª—è —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–æ–≤–µ—Ä—è–µ–º email —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
      if (isPasswordValid && (isVerified === 0 || isVerified === false)) {
        console.log('‚ùå Email –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω —É —Å—Ç–∞—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        return { 
          success: false, 
          error: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à email –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É.',
          needsVerification: true 
        };
      }
    }

    if (!isPasswordValid) {
      console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å');
      return { 
        success: false, 
        error: '–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å' 
      };
    }

    // –£—Å–ø–µ—à–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é
    console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é');
    const cookieStore = await cookies();
    
    cookieStore.set('userId', user.id.toString(), {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'lax',
      maxAge: 60 * 60 * 24 * 7 // 7 –¥–Ω–µ–π
    });
    
    cookieStore.set('userNicName', user.nicName, {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'lax',
      maxAge: 60 * 60 * 24 * 7 // 7 –¥–Ω–µ–π
    });
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', user.nicName);
    
    return { 
      success: true, 
      redirectTo: returnTo || '/dashboard' 
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
    return { 
      success: false, 
      error: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' 
    };
  }
}

/**
 * Server Action –¥–ª—è –≤—ã—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export async function logoutAction() {
  try {
    const cookieStore = await cookies();
    cookieStore.delete('userId');
    cookieStore.delete('userNicName');
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    return { success: true };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:', error);
    return { success: false, error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ' };
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export async function getCurrentUser() {
  const cookieStore = await cookies();
  const userId = cookieStore.get('userId')?.value;
  const userNicName = cookieStore.get('userNicName')?.value;
  
  if (!userId) {
    return null;
  }
  
  try {
    const result = await query(`
      SELECT 
        u.id, 
        u.login,
        u.nicName,
        u.fullName,
        u.email,
        u.phone,
        u.companyId,
        e.companyId as employeeCompanyId
      FROM [User] u
      LEFT JOIN Employee e ON u.id = e.userId
      WHERE u.id = @userId
    `, { userId: parseInt(userId) });
    
    if (result.length === 0) {
      return null;
    }
    
    const user = result[0];
    return {
      id: user.id,
      login: user.login,
      nicName: userNicName || user.nicName,
      fullName: user.fullName,
      email: user.email,
      phone: user.phone,
      companyId: user.companyId || user.employeeCompanyId // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç Employee.companyId
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    return null;
  }
}
